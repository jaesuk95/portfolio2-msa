server:
  port: 0
spring:
  application:
    name: user-service
  datasource:
#    driver-class-name: com.mysql.cj.jdbc.Driver
#    url: jdbc:mysql://localhost:3306/mydb
#    username: root
#    password: admin
      url: jdbc:h2:mem:testdb
      driver-class-name: org.h2.Driver
      username: sa
      password:
#   ?? ?? (spring 2.x.x ??)
#  zipkin:
#    base-url: http://localhost:9411
#    enabled: true
  h2:
    console:
      enabled: true
      settings:
        web-allow-others: true
      path: /h2-console
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
    show-sql: true
  rabbitmq:
    host: 127.0.0.1
    port: 5672
    username: guest
    password: guest
greeting:
  message: Welcome
eureka:
  instance:
    #    loadBalancing technique
    #    instance-id: ${spring.cloud.client.hostname}:${spring.application.instance_id:${random.value}}
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    #    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    #    prefer-ip-address: true
#    hostname: localhost
    preferIpAddress: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://127.0.0.1:8761/eureka

logging:
  level:
#    com.example.userservice: DEBUG
    com.portfolio.userservice: DEBUG
  pattern:
    level: "%5p [TRACE_ID: %X{traceId:-}] [SPAN_ID: %X{spanId:-}]"

#token:
#  expiration_time: 86400000
#  secret: user_token

management:
  endpoints:
    web:
      exposure:
        include: refresh, health, beans, busrefresh, info, metrics, prometheus
    enabled-by-default: true
#  tracing:
#    sampling:
#      probability: 1.0
#  zipkin:
#    tracing:
#      endpoint: http://localhost:9411/api/v2/spans

#client
#clients:
#  user-service:
#    url: http://user-service
#  order-service:
#    url: http://order-service
#  payment-service:
#    url: http://payment-service
#  clients.user-service.url=http://user-service
#  clients.order-service.url=http://order-service
#app:
#  order-service-url: http://127.0.0.1:8000/order-service
#  payment-service-url: http://127.0.0.1:8000/payment-service
#  user-service-url: http://127.0.0.1:8000/user-service
app:
  userurl: http://127.0.0.1:8000
  orderurl: http://127.0.0.1:8000
  paymenturl: http://127.0.0.1:8000
  kafkaurl: 127.0.0.1:9092